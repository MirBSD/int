{
  "jobs": {
    "analyse": {
      "permissions": {
        "actions": "read",
        "contents": "read",
        "security-events": "write"
      },
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "name": "Cancel previous runs",
          "uses": "styfle/cancel-workflow-action@0.12.1",
          "with": {
            "access_token": "${{ github.token }}",
            "all_but_latest": true
          }
        },
        {
          "uses": "actions/checkout@v4.1.1"
        },
        {
          "run": "(git gc --quiet || :)"
        },
        {
          "name": "Initialise CodeQL",
          "uses": "github/codeql-action/init@v2",
          "with": {
            "languages": "cpp"
          }
        },
        {
          "run": ": \"${CC=cc}${CFLAGS=-O2}\"; eval \"$(env DEB_BUILD_MAINT_OPTIONS='future=+all qa=+all,-canary optimize=+all,-lto hardening=+all reproducible=+all' dpkg-buildflags --export=sh || :)\"; export LDFLAGS; exec sh mkt-int.sh $CC $CPPFLAGS $CFLAGS -Wall -Wextra -DMBSDINT_H_WANT_PTR_IN_SIZET -DMBSDINT_H_WANT_SIZET_IN_LONG -DMBSDINT_H_WANT_INT32 -DMBSDINT_H_WANT_LRG64 -DMBSDINT_H_WANT_SAFEC"
        },
        {
          "name": "Perform CodeQL Analysis",
          "uses": "github/codeql-action/analyze@v2"
        }
      ],
      "strategy": {
        "fail-fast": true
      }
    }
  },
  "name": "CodeQL",
  "on": {
    "push": {
      "branches": [
        "GHA"
      ]
    },
    "workflow_dispatch": null
  }
}
